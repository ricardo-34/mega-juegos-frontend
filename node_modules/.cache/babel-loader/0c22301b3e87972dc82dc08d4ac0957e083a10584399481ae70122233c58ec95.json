{"ast":null,"code":"const express = require('express');\nconst puppeteer = require('puppeteer');\nconst cheerio = require('cheerio');\nconst router = express.Router();\nrouter.post('/extract', async (req, res) => {\n  try {\n    const {\n      url\n    } = req.body;\n    if (!url) {\n      return res.status(400).json({\n        error: 'URL es requerida'\n      });\n    }\n    const browser = await puppeteer.launch({\n      headless: 'new',\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\n    });\n    const page = await browser.newPage();\n    await page.goto(url, {\n      waitUntil: 'networkidle0'\n    });\n    const html = await page.content();\n    await browser.close();\n    const $ = cheerio.load(html);\n\n    // Extraer información común de diferentes sitios\n    const extractedData = {\n      nombre: extractTitle($),\n      imagenUrl: extractImage($),\n      info: extractDescription($),\n      fechaEstreno: extractReleaseDate($),\n      plataforma: extractPlatform($),\n      peso: extractFileSize($),\n      requisitos: extractRequirements($)\n    };\n    res.json(extractedData);\n  } catch (error) {\n    console.error('Error extrayendo datos:', error);\n    res.status(500).json({\n      error: 'Error al extraer información del sitio web'\n    });\n  }\n});\n\n// Funciones auxiliares para extraer información\nfunction extractTitle($) {\n  return $('title').text().trim() || $('h1').first().text().trim() || $('[class*=\"title\"], [class*=\"name\"]').first().text().trim() || '';\n}\nfunction extractImage($) {\n  return $('img[class*=\"cover\"], img[class*=\"poster\"], img[class*=\"main\"]').first().attr('src') || $('meta[property=\"og:image\"]').attr('content') || $('img').first().attr('src') || '';\n}\nfunction extractDescription($) {\n  return $('meta[name=\"description\"]').attr('content') || $('meta[property=\"og:description\"]').attr('content') || $('[class*=\"description\"], [class*=\"summary\"]').first().text().trim() || '';\n}\nfunction extractReleaseDate($) {\n  const dateText = $('[class*=\"release\"], [class*=\"date\"]').first().text();\n  const match = dateText.match(/\\d{4}-\\d{2}-\\d{2}|\\d{1,2}\\/\\d{1,2}\\/\\d{4}/);\n  return match ? match[0] : '';\n}\nfunction extractPlatform($) {\n  const platformText = $('[class*=\"platform\"]').text().toLowerCase();\n  if (platformText.includes('pc') || platformText.includes('windows')) return 'PC';\n  if (platformText.includes('playstation')) return 'PlayStation';\n  if (platformText.includes('xbox')) return 'Xbox';\n  return 'PC';\n}\nfunction extractFileSize($) {\n  const sizeText = $('body').text();\n  const match = sizeText.match(/(\\d+(?:\\.\\d+)?)\\s*(GB|MB|TB)/i);\n  return match ? match[0] : '';\n}\nfunction extractRequirements($) {\n  const reqText = $('[class*=\"requirement\"], [class*=\"system\"]').text();\n  return {\n    minimo: {\n      so: extractFromText(reqText, /SO[:\\s]*(.*?)(?=Procesador|$)/i),\n      procesador: extractFromText(reqText, /Procesador[:\\s]*(.*?)(?=Memoria|$)/i),\n      memoria: extractFromText(reqText, /Memoria[:\\s]*(.*?)(?=Gráficos|$)/i),\n      graficos: extractFromText(reqText, /Gráficos[:\\s]*(.*?)(?=Disco|$)/i),\n      disco: extractFromText(reqText, /Disco[:\\s]*(.*?)(?=\\n|$)/i)\n    },\n    recomendado: {\n      so: '',\n      procesador: '',\n      memoria: '',\n      graficos: '',\n      disco: ''\n    }\n  };\n}\nfunction extractFromText(text, regex) {\n  const match = text.match(regex);\n  return match ? match[1].trim() : '';\n}\nmodule.exports = router;","map":{"version":3,"names":["express","require","puppeteer","cheerio","router","Router","post","req","res","url","body","status","json","error","browser","launch","headless","args","page","newPage","goto","waitUntil","html","content","close","$","load","extractedData","nombre","extractTitle","imagenUrl","extractImage","info","extractDescription","fechaEstreno","extractReleaseDate","plataforma","extractPlatform","peso","extractFileSize","requisitos","extractRequirements","console","text","trim","first","attr","dateText","match","platformText","toLowerCase","includes","sizeText","reqText","minimo","so","extractFromText","procesador","memoria","graficos","disco","recomendado","regex","module","exports"],"sources":["C:/Users/RicardoMelo/Documents/Ricardo Melo/Pagina de juegos/mega-juegos-pc/frontend/src/pages/Admin/Admin.js"],"sourcesContent":["const express = require('express');\r\nconst puppeteer = require('puppeteer');\r\nconst cheerio = require('cheerio');\r\nconst router = express.Router();\r\n\r\nrouter.post('/extract', async (req, res) => {\r\n  try {\r\n    const { url } = req.body;\r\n    \r\n    if (!url) {\r\n      return res.status(400).json({ error: 'URL es requerida' });\r\n    }\r\n\r\n    const browser = await puppeteer.launch({ \r\n      headless: 'new',\r\n      args: ['--no-sandbox', '--disable-setuid-sandbox']\r\n    });\r\n    \r\n    const page = await browser.newPage();\r\n    await page.goto(url, { waitUntil: 'networkidle0' });\r\n    \r\n    const html = await page.content();\r\n    await browser.close();\r\n    \r\n    const $ = cheerio.load(html);\r\n    \r\n    // Extraer información común de diferentes sitios\r\n    const extractedData = {\r\n      nombre: extractTitle($),\r\n      imagenUrl: extractImage($),\r\n      info: extractDescription($),\r\n      fechaEstreno: extractReleaseDate($),\r\n      plataforma: extractPlatform($),\r\n      peso: extractFileSize($),\r\n      requisitos: extractRequirements($)\r\n    };\r\n\r\n    res.json(extractedData);\r\n    \r\n  } catch (error) {\r\n    console.error('Error extrayendo datos:', error);\r\n    res.status(500).json({ error: 'Error al extraer información del sitio web' });\r\n  }\r\n});\r\n\r\n// Funciones auxiliares para extraer información\r\nfunction extractTitle($) {\r\n  return $('title').text().trim() ||\r\n         $('h1').first().text().trim() ||\r\n         $('[class*=\"title\"], [class*=\"name\"]').first().text().trim() ||\r\n         '';\r\n}\r\n\r\nfunction extractImage($) {\r\n  return $('img[class*=\"cover\"], img[class*=\"poster\"], img[class*=\"main\"]').first().attr('src') ||\r\n         $('meta[property=\"og:image\"]').attr('content') ||\r\n         $('img').first().attr('src') ||\r\n         '';\r\n}\r\n\r\nfunction extractDescription($) {\r\n  return $('meta[name=\"description\"]').attr('content') ||\r\n         $('meta[property=\"og:description\"]').attr('content') ||\r\n         $('[class*=\"description\"], [class*=\"summary\"]').first().text().trim() ||\r\n         '';\r\n}\r\n\r\nfunction extractReleaseDate($) {\r\n  const dateText = $('[class*=\"release\"], [class*=\"date\"]').first().text();\r\n  const match = dateText.match(/\\d{4}-\\d{2}-\\d{2}|\\d{1,2}\\/\\d{1,2}\\/\\d{4}/);\r\n  return match ? match[0] : '';\r\n}\r\n\r\nfunction extractPlatform($) {\r\n  const platformText = $('[class*=\"platform\"]').text().toLowerCase();\r\n  if (platformText.includes('pc') || platformText.includes('windows')) return 'PC';\r\n  if (platformText.includes('playstation')) return 'PlayStation';\r\n  if (platformText.includes('xbox')) return 'Xbox';\r\n  return 'PC';\r\n}\r\n\r\nfunction extractFileSize($) {\r\n  const sizeText = $('body').text();\r\n  const match = sizeText.match(/(\\d+(?:\\.\\d+)?)\\s*(GB|MB|TB)/i);\r\n  return match ? match[0] : '';\r\n}\r\n\r\nfunction extractRequirements($) {\r\n  const reqText = $('[class*=\"requirement\"], [class*=\"system\"]').text();\r\n  \r\n  return {\r\n    minimo: {\r\n      so: extractFromText(reqText, /SO[:\\s]*(.*?)(?=Procesador|$)/i),\r\n      procesador: extractFromText(reqText, /Procesador[:\\s]*(.*?)(?=Memoria|$)/i),\r\n      memoria: extractFromText(reqText, /Memoria[:\\s]*(.*?)(?=Gráficos|$)/i),\r\n      graficos: extractFromText(reqText, /Gráficos[:\\s]*(.*?)(?=Disco|$)/i),\r\n      disco: extractFromText(reqText, /Disco[:\\s]*(.*?)(?=\\n|$)/i)\r\n    },\r\n    recomendado: {\r\n      so: '',\r\n      procesador: '',\r\n      memoria: '',\r\n      graficos: '',\r\n      disco: ''\r\n    }\r\n  };\r\n}\r\n\r\nfunction extractFromText(text, regex) {\r\n  const match = text.match(regex);\r\n  return match ? match[1].trim() : '';\r\n}\r\n\r\nmodule.exports = router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}