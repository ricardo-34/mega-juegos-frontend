{"ast":null,"code":"import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\"input\", \"option\", \"optgroup\", \"select\", \"button\", \"datalist\", \"textarea\"]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([[\"tr\", new Set([\"tr\", \"th\", \"td\"])], [\"th\", new Set([\"th\"])], [\"td\", new Set([\"thead\", \"th\", \"td\"])], [\"body\", new Set([\"head\", \"link\", \"script\"])], [\"li\", new Set([\"li\"])], [\"p\", pTag], [\"h1\", pTag], [\"h2\", pTag], [\"h3\", pTag], [\"h4\", pTag], [\"h5\", pTag], [\"h6\", pTag], [\"select\", formTags], [\"input\", formTags], [\"output\", formTags], [\"button\", formTags], [\"datalist\", formTags], [\"textarea\", formTags], [\"option\", new Set([\"option\"])], [\"optgroup\", new Set([\"optgroup\", \"option\"])], [\"dd\", ddtTags], [\"dt\", ddtTags], [\"address\", pTag], [\"article\", pTag], [\"aside\", pTag], [\"blockquote\", pTag], [\"details\", pTag], [\"div\", pTag], [\"dl\", pTag], [\"fieldset\", pTag], [\"figcaption\", pTag], [\"figure\", pTag], [\"footer\", pTag], [\"form\", pTag], [\"header\", pTag], [\"hr\", pTag], [\"main\", pTag], [\"nav\", pTag], [\"ol\", pTag], [\"pre\", pTag], [\"section\", pTag], [\"table\", pTag], [\"ul\", pTag], [\"rt\", rtpTags], [\"rp\", rtpTags], [\"tbody\", tableSectionTags], [\"tfoot\", tableSectionTags]]);\nconst voidElements = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignobject\", \"desc\", \"title\"]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n  constructor(cbs, options = {}) {\n    var _a, _b, _c, _d, _e, _f;\n    this.options = options;\n    /** The start index of the last event. */\n    this.startIndex = 0;\n    /** The end index of the last event. */\n    this.endIndex = 0;\n    /**\n     * Store the start index of the current open tag,\n     * so we can update the start index for attributes.\n     */\n    this.openTagStart = 0;\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribvalue = \"\";\n    this.attribs = null;\n    this.stack = [];\n    this.buffers = [];\n    this.bufferOffset = 0;\n    /** The index of the last written buffer. Used when resuming after a `pause()`. */\n    this.writeIndex = 0;\n    /** Indicates whether the parser has finished running / `.end` has been called. */\n    this.ended = false;\n    this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n    this.htmlMode = !this.options.xmlMode;\n    this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : this.htmlMode;\n    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n    this.recognizeSelfClosing = (_c = options.recognizeSelfClosing) !== null && _c !== void 0 ? _c : !this.htmlMode;\n    this.tokenizer = new ((_d = options.Tokenizer) !== null && _d !== void 0 ? _d : Tokenizer)(this.options, this);\n    this.foreignContext = [!this.htmlMode];\n    (_f = (_e = this.cbs).onparserinit) === null || _f === void 0 ? void 0 : _f.call(_e, this);\n  }\n  // Tokenizer event handlers\n  /** @internal */\n  ontext(start, endIndex) {\n    var _a, _b;\n    const data = this.getSlice(start, endIndex);\n    this.endIndex = endIndex - 1;\n    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n    this.startIndex = endIndex;\n  }\n  /** @internal */\n  ontextentity(cp, endIndex) {\n    var _a, _b;\n    this.endIndex = endIndex - 1;\n    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n    this.startIndex = endIndex;\n  }\n  /**\n   * Checks if the current tag is a void element. Override this if you want\n   * to specify your own additional void elements.\n   */\n  isVoidElement(name) {\n    return this.htmlMode && voidElements.has(name);\n  }\n  /** @internal */\n  onopentagname(start, endIndex) {\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    this.emitOpenTag(name);\n  }\n  emitOpenTag(name) {\n    var _a, _b, _c, _d;\n    this.openTagStart = this.startIndex;\n    this.tagname = name;\n    const impliesClose = this.htmlMode && openImpliesClose.get(name);\n    if (impliesClose) {\n      while (this.stack.length > 0 && impliesClose.has(this.stack[0])) {\n        const element = this.stack.shift();\n        (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n      }\n    }\n    if (!this.isVoidElement(name)) {\n      this.stack.unshift(name);\n      if (this.htmlMode) {\n        if (foreignContextElements.has(name)) {\n          this.foreignContext.unshift(true);\n        } else if (htmlIntegrationElements.has(name)) {\n          this.foreignContext.unshift(false);\n        }\n      }\n    }\n    (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n    if (this.cbs.onopentag) this.attribs = {};\n  }\n  endOpenTag(isImplied) {\n    var _a, _b;\n    this.startIndex = this.openTagStart;\n    if (this.attribs) {\n      (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n      this.attribs = null;\n    }\n    if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n      this.cbs.onclosetag(this.tagname, true);\n    }\n    this.tagname = \"\";\n  }\n  /** @internal */\n  onopentagend(endIndex) {\n    this.endIndex = endIndex;\n    this.endOpenTag(false);\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onclosetag(start, endIndex) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    if (this.htmlMode && (foreignContextElements.has(name) || htmlIntegrationElements.has(name))) {\n      this.foreignContext.shift();\n    }\n    if (!this.isVoidElement(name)) {\n      const pos = this.stack.indexOf(name);\n      if (pos !== -1) {\n        for (let index = 0; index <= pos; index++) {\n          const element = this.stack.shift();\n          // We know the stack has sufficient elements.\n          (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, index !== pos);\n        }\n      } else if (this.htmlMode && name === \"p\") {\n        // Implicit open before close\n        this.emitOpenTag(\"p\");\n        this.closeCurrentTag(true);\n      }\n    } else if (this.htmlMode && name === \"br\") {\n      // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n      (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\");\n      (_f = (_e = this.cbs).onopentag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", {}, true);\n      (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 ? void 0 : _h.call(_g, \"br\", false);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onselfclosingtag(endIndex) {\n    this.endIndex = endIndex;\n    if (this.recognizeSelfClosing || this.foreignContext[0]) {\n      this.closeCurrentTag(false);\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    } else {\n      // Ignore the fact that the tag is self-closing.\n      this.onopentagend(endIndex);\n    }\n  }\n  closeCurrentTag(isOpenImplied) {\n    var _a, _b;\n    const name = this.tagname;\n    this.endOpenTag(isOpenImplied);\n    // Self-closing tags will be on the top of the stack\n    if (this.stack[0] === name) {\n      // If the opening tag isn't implied, the closing tag has to be implied.\n      (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n      this.stack.shift();\n    }\n  }\n  /** @internal */\n  onattribname(start, endIndex) {\n    this.startIndex = start;\n    const name = this.getSlice(start, endIndex);\n    this.attribname = this.lowerCaseAttributeNames ? name.toLowerCase() : name;\n  }\n  /** @internal */\n  onattribdata(start, endIndex) {\n    this.attribvalue += this.getSlice(start, endIndex);\n  }\n  /** @internal */\n  onattribentity(cp) {\n    this.attribvalue += fromCodePoint(cp);\n  }\n  /** @internal */\n  onattribend(quote, endIndex) {\n    var _a, _b;\n    this.endIndex = endIndex;\n    (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double ? '\"' : quote === QuoteType.Single ? \"'\" : quote === QuoteType.NoValue ? undefined : null);\n    if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n      this.attribs[this.attribname] = this.attribvalue;\n    }\n    this.attribvalue = \"\";\n  }\n  getInstructionName(value) {\n    const index = value.search(reNameEnd);\n    let name = index < 0 ? value : value.substr(0, index);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    return name;\n  }\n  /** @internal */\n  ondeclaration(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onprocessinginstruction(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncomment(start, endIndex, offset) {\n    var _a, _b, _c, _d;\n    this.endIndex = endIndex;\n    (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n    (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncdata(start, endIndex, offset) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex - offset);\n    if (!this.htmlMode || this.options.recognizeCDATA) {\n      (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n      (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n    } else {\n      (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n      (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onend() {\n    var _a, _b;\n    if (this.cbs.onclosetag) {\n      // Set the end index for all remaining tags\n      this.endIndex = this.startIndex;\n      for (let index = 0; index < this.stack.length; index++) {\n        this.cbs.onclosetag(this.stack[index], true);\n      }\n    }\n    (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n  }\n  /**\n   * Resets the parser to a blank state, ready to parse a new HTML document\n   */\n  reset() {\n    var _a, _b, _c, _d;\n    (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n    this.tokenizer.reset();\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribs = null;\n    this.stack.length = 0;\n    this.startIndex = 0;\n    this.endIndex = 0;\n    (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n    this.buffers.length = 0;\n    this.foreignContext.length = 0;\n    this.foreignContext.unshift(!this.htmlMode);\n    this.bufferOffset = 0;\n    this.writeIndex = 0;\n    this.ended = false;\n  }\n  /**\n   * Resets the parser, then parses a complete document and\n   * pushes it to the handler.\n   *\n   * @param data Document to parse.\n   */\n  parseComplete(data) {\n    this.reset();\n    this.end(data);\n  }\n  getSlice(start, end) {\n    while (start - this.bufferOffset >= this.buffers[0].length) {\n      this.shiftBuffer();\n    }\n    let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n    while (end - this.bufferOffset > this.buffers[0].length) {\n      this.shiftBuffer();\n      slice += this.buffers[0].slice(0, end - this.bufferOffset);\n    }\n    return slice;\n  }\n  shiftBuffer() {\n    this.bufferOffset += this.buffers[0].length;\n    this.writeIndex--;\n    this.buffers.shift();\n  }\n  /**\n   * Parses a chunk of data and calls the corresponding callbacks.\n   *\n   * @param chunk Chunk to parse.\n   */\n  write(chunk) {\n    var _a, _b;\n    if (this.ended) {\n      (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n      return;\n    }\n    this.buffers.push(chunk);\n    if (this.tokenizer.running) {\n      this.tokenizer.write(chunk);\n      this.writeIndex++;\n    }\n  }\n  /**\n   * Parses the end of the buffer and clears the stack, calls onend.\n   *\n   * @param chunk Optional final chunk to parse.\n   */\n  end(chunk) {\n    var _a, _b;\n    if (this.ended) {\n      (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n      return;\n    }\n    if (chunk) this.write(chunk);\n    this.ended = true;\n    this.tokenizer.end();\n  }\n  /**\n   * Pauses parsing. The parser won't emit events until `resume` is called.\n   */\n  pause() {\n    this.tokenizer.pause();\n  }\n  /**\n   * Resumes parsing after `pause` was called.\n   */\n  resume() {\n    this.tokenizer.resume();\n    while (this.tokenizer.running && this.writeIndex < this.buffers.length) {\n      this.tokenizer.write(this.buffers[this.writeIndex++]);\n    }\n    if (this.ended) this.tokenizer.end();\n  }\n  /**\n   * Alias of `write`, for backwards compatibility.\n   *\n   * @param chunk Chunk to parse.\n   * @deprecated\n   */\n  parseChunk(chunk) {\n    this.write(chunk);\n  }\n  /**\n   * Alias of `end`, for backwards compatibility.\n   *\n   * @param chunk Optional final chunk to parse.\n   * @deprecated\n   */\n  done(chunk) {\n    this.end(chunk);\n  }\n}","map":{"version":3,"names":["Tokenizer","QuoteType","fromCodePoint","formTags","Set","pTag","tableSectionTags","ddtTags","rtpTags","openImpliesClose","Map","voidElements","foreignContextElements","htmlIntegrationElements","reNameEnd","Parser","constructor","cbs","options","startIndex","endIndex","openTagStart","tagname","attribname","attribvalue","attribs","stack","buffers","bufferOffset","writeIndex","ended","htmlMode","xmlMode","lowerCaseTagNames","_a","lowerCaseTags","lowerCaseAttributeNames","_b","recognizeSelfClosing","_c","tokenizer","_d","foreignContext","_f","_e","onparserinit","call","ontext","start","data","getSlice","ontextentity","cp","isVoidElement","name","has","onopentagname","toLowerCase","emitOpenTag","impliesClose","get","length","element","shift","onclosetag","unshift","onopentag","endOpenTag","isImplied","onopentagend","pos","indexOf","index","closeCurrentTag","_h","_g","onselfclosingtag","isOpenImplied","onattribname","onattribdata","onattribentity","onattribend","quote","onattribute","Double","Single","NoValue","undefined","Object","prototype","hasOwnProperty","getInstructionName","value","search","substr","ondeclaration","onprocessinginstruction","oncomment","offset","oncommentend","oncdata","recognizeCDATA","oncdatastart","oncdataend","_k","_j","onend","reset","onreset","parseComplete","end","shiftBuffer","slice","write","chunk","onerror","Error","push","running","pause","resume","parseChunk","done"],"sources":["https://raw.githubusercontent.com/fb55/htmlparser2/e2939a6c7b05d5c4845b4a2e458a4fc0a65a321d/src/Parser.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}