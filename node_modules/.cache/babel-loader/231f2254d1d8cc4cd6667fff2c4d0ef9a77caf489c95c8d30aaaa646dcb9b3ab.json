{"ast":null,"code":"function getExtractDescr(descr) {\n  var _a;\n  if (typeof descr === 'string') {\n    return {\n      selector: descr,\n      value: 'textContent'\n    };\n  }\n  return {\n    selector: descr.selector,\n    value: (_a = descr.value) !== null && _a !== void 0 ? _a : 'textContent'\n  };\n}\n/**\n * Extract multiple values from a document, and store them in an object.\n *\n * @param map - An object containing key-value pairs. The keys are the names of\n *   the properties to be created on the object, and the values are the\n *   selectors to be used to extract the values.\n * @returns An object containing the extracted values.\n */\nexport function extract(map) {\n  const ret = {};\n  for (const key in map) {\n    const descr = map[key];\n    const isArray = Array.isArray(descr);\n    const {\n      selector,\n      value\n    } = getExtractDescr(isArray ? descr[0] : descr);\n    const fn = typeof value === 'function' ? value : typeof value === 'string' ? el => this._make(el).prop(value) : el => this._make(el).extract(value);\n    if (isArray) {\n      ret[key] = this._findBySelector(selector, Number.POSITIVE_INFINITY).map((_, el) => fn(el, key, ret)).get();\n    } else {\n      const $ = this._findBySelector(selector, 1);\n      ret[key] = $.length > 0 ? fn($[0], key, ret) : undefined;\n    }\n  }\n  return ret;\n}","map":{"version":3,"names":["getExtractDescr","descr","selector","value","_a","extract","map","ret","key","isArray","Array","fn","el","_make","prop","_findBySelector","Number","POSITIVE_INFINITY","_","get","$","length","undefined"],"sources":["../../../src/api/extract.ts"],"sourcesContent":[null],"mappings":"AAwCA,SAASA,eAAeA,CACtBC,KAAiC;;EAEjC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO;MAAEC,QAAQ,EAAED,KAAK;MAAEE,KAAK,EAAE;IAAa,CAAE;EAClD;EAEA,OAAO;IACLD,QAAQ,EAAED,KAAK,CAACC,QAAQ;IACxBC,KAAK,EAAE,CAAAC,EAAA,GAAAH,KAAK,CAACE,KAAK,cAAAC,EAAA,cAAAA,EAAA,GAAI;GACvB;AACH;AAEA;;;;;;;;AAQA,OAAM,SAAUC,OAAOA,CAErBC,GAAM;EAEN,MAAMC,GAAG,GAA4B,EAAE;EAEvC,KAAK,MAAMC,GAAG,IAAIF,GAAG,EAAE;IACrB,MAAML,KAAK,GAAGK,GAAG,CAACE,GAAG,CAAC;IACtB,MAAMC,OAAO,GAAGC,KAAK,CAACD,OAAO,CAACR,KAAK,CAAC;IAEpC,MAAM;MAAEC,QAAQ;MAAEC;IAAK,CAAE,GAAGH,eAAe,CAACS,OAAO,GAAGR,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC;IAEvE,MAAMU,EAAE,GACN,OAAOR,KAAK,KAAK,UAAU,GACvBA,KAAK,GACL,OAAOA,KAAK,KAAK,QAAQ,GACtBS,EAAW,IAAK,IAAI,CAACC,KAAK,CAACD,EAAE,CAAC,CAACE,IAAI,CAACX,KAAK,CAAC,GAC1CS,EAAW,IAAK,IAAI,CAACC,KAAK,CAACD,EAAE,CAAC,CAACP,OAAO,CAACF,KAAK,CAAC;IAEtD,IAAIM,OAAO,EAAE;MACXF,GAAG,CAACC,GAAG,CAAC,GAAG,IAAI,CAACO,eAAe,CAACb,QAAQ,EAAEc,MAAM,CAACC,iBAAiB,CAAC,CAChEX,GAAG,CAAC,CAACY,CAAC,EAAEN,EAAE,KAAKD,EAAE,CAACC,EAAE,EAAEJ,GAAG,EAAED,GAAG,CAAC,CAAC,CAChCY,GAAG,EAAE;IACV,CAAC,MAAM;MACL,MAAMC,CAAC,GAAG,IAAI,CAACL,eAAe,CAACb,QAAQ,EAAE,CAAC,CAAC;MAC3CK,GAAG,CAACC,GAAG,CAAC,GAAGY,CAAC,CAACC,MAAM,GAAG,CAAC,GAAGV,EAAE,CAACS,CAAC,CAAC,CAAC,CAAC,EAAEZ,GAAG,EAAED,GAAG,CAAC,GAAGe,SAAS;IAC1D;EACF;EAEA,OAAOf,GAAsB;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}