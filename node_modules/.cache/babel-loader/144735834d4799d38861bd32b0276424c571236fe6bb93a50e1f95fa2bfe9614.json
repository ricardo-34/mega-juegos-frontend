{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst Game = require('../models/Game');\n\n// *** NUEVAS DEPENDENCIAS - Agregar al inicio ***\nconst cheerio = require('cheerio');\nconst axios = require('axios');\n\n// GET todos los juegos (existente)\nrouter.get('/', async (req, res) => {\n  const games = await Game.find({});\n  res.json(games);\n});\n\n// GET juego por ID (existente)\nrouter.get('/:id', async (req, res) => {\n  const game = await Game.findById(req.params.id);\n  res.json(game);\n});\n\n// POST crea un nuevo juego (existente)\nrouter.post('/', async (req, res) => {\n  const newGame = new Game(req.body);\n  const saved = await newGame.save();\n  res.json(saved);\n});\n\n// *** NUEVA RUTA - Agregar aquí ***\nrouter.post('/extract-from-url', async (req, res) => {\n  try {\n    const {\n      url\n    } = req.body;\n    if (!url) {\n      return res.status(400).json({\n        success: false,\n        error: 'URL es requerida'\n      });\n    }\n\n    // Hacer petición a la URL con headers para evitar bloqueos\n    const response = await axios.get(url, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n      },\n      timeout: 10000 // 10 segundos timeout\n    });\n    const $ = cheerio.load(response.data);\n\n    // Extraer información básica\n    const extractedData = {\n      nombre: extractTitle($),\n      imagenUrl: extractImage($, url),\n      info: extractDescription($),\n      fechaEstreno: extractDate($),\n      requisitos: extractRequirements($),\n      plataforma: extractPlatform($),\n      peso: extractSize($),\n      version: extractVersion($),\n      descargaUrl: '' // Este campo generalmente no se puede extraer automáticamente\n    };\n    res.json({\n      success: true,\n      data: extractedData,\n      message: 'Datos extraídos exitosamente'\n    });\n  } catch (error) {\n    console.error('Error extracting data:', error.message);\n    res.status(500).json({\n      success: false,\n      error: `Error al extraer datos: ${error.message}`\n    });\n  }\n});\n\n// *** FUNCIONES AUXILIARES - Agregar al final del archivo ***\n\nfunction extractTitle($) {\n  // Intentar diferentes selectores para el título\n  const selectors = ['h1', '.game-title', '.title', 'title', '.product-title', '.entry-title'];\n  for (const selector of selectors) {\n    const element = $(selector).first();\n    if (element.length && element.text().trim()) {\n      return element.text().trim().split('|')[0].trim();\n    }\n  }\n  return '';\n}\nfunction extractImage($, baseUrl) {\n  // Intentar diferentes selectores para imágenes\n  const selectors = ['.game-image img', '.product-image img', '.cover-image', '.screenshot img', '.main-image img', 'img[alt*=\"cover\"]', 'img[alt*=\"screenshot\"]', '.hero-image img'];\n  for (const selector of selectors) {\n    const img = $(selector).first();\n    if (img.length) {\n      let src = img.attr('src') || img.attr('data-src');\n      if (src) {\n        // Convertir URL relativa a absoluta\n        if (src.startsWith('/')) {\n          const urlObj = new URL(baseUrl);\n          src = urlObj.origin + src;\n        } else if (!src.startsWith('http')) {\n          src = baseUrl + '/' + src;\n        }\n        return src;\n      }\n    }\n  }\n  return '';\n}\nfunction extractDescription($) {\n  // Intentar diferentes selectores para la descripción\n  const selectors = ['meta[name=\"description\"]', '.game-description', '.description', '.summary', '.product-description', '.content p', '.overview'];\n  for (const selector of selectors) {\n    let text = '';\n    if (selector.startsWith('meta')) {\n      text = $(selector).attr('content');\n    } else {\n      text = $(selector).first().text().trim();\n    }\n    if (text && text.length > 50) {\n      return text.substring(0, 500) + (text.length > 500 ? '...' : '');\n    }\n  }\n  return '';\n}\nfunction extractDate($) {\n  const text = $('body').text();\n\n  // Buscar fechas en diferentes formatos\n  const datePatterns = [/(\\d{4}-\\d{2}-\\d{2})/, /(\\d{2}\\/\\d{2}\\/\\d{4})/, /(\\d{1,2}\\s+(?:enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)\\s+\\d{4})/i, /(\\d{1,2}\\s+(?:jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\s+\\d{4})/i];\n  for (const pattern of datePatterns) {\n    const match = text.match(pattern);\n    if (match) {\n      return match[1];\n    }\n  }\n  return '';\n}\nfunction extractRequirements($) {\n  const requirements = {\n    minimo: {\n      so: '',\n      procesador: '',\n      memoria: '',\n      graficos: '',\n      disco: ''\n    },\n    recomendado: {\n      so: '',\n      procesador: '',\n      memoria: '',\n      graficos: '',\n      disco: ''\n    }\n  };\n\n  // Buscar secciones de requisitos\n  const reqSections = $('.requirements, .system-requirements, .specs, [class*=\"requirement\"]');\n  reqSections.each((i, section) => {\n    const text = $(section).text();\n    const html = $(section).html();\n\n    // Determinar si es mínimo o recomendado\n    const isMinimo = /mínimo|minimum|min\\./i.test(text);\n    const isRecomendado = /recomendado|recommended|rec\\./i.test(text);\n    if (isMinimo || isRecomendado || reqSections.length === 1) {\n      const target = isMinimo ? requirements.minimo : requirements.recomendado;\n\n      // Extraer SO\n      const soMatch = text.match(/(Windows\\s+\\d+[^,\\n]*|macOS[^,\\n]*|Linux[^,\\n]*)/i);\n      if (soMatch) target.so = soMatch[1].trim();\n\n      // Extraer procesador\n      const procMatch = text.match(/(Intel[^,\\n]*|AMD[^,\\n]*|Processor[^,\\n]*)/i);\n      if (procMatch) target.procesador = procMatch[1].trim();\n\n      // Extraer memoria RAM\n      const memMatch = text.match(/(\\d+\\s*GB\\s*(?:RAM|de RAM|Memory))/i);\n      if (memMatch) target.memoria = memMatch[1].trim();\n\n      // Extraer gráficos\n      const grafMatch = text.match(/(DirectX[^,\\n]*|NVIDIA[^,\\n]*|AMD Radeon[^,\\n]*|Intel Graphics[^,\\n]*)/i);\n      if (grafMatch) target.graficos = grafMatch[1].trim();\n\n      // Extraer espacio en disco\n      const diskMatch = text.match(/(\\d+\\s*GB\\s*(?:available space|de espacio|disk space|storage))/i);\n      if (diskMatch) target.disco = diskMatch[1].trim();\n    }\n  });\n  return requirements;\n}\nfunction extractPlatform($) {\n  const text = $('body').text().toLowerCase();\n  if (text.includes('windows') || text.includes('pc')) return 'PC';\n  if (text.includes('mac') || text.includes('macos')) return 'Mac';\n  if (text.includes('linux')) return 'Linux';\n  if (text.includes('steam') || text.includes('epic')) return 'PC';\n  return 'PC';\n}\nfunction extractSize($) {\n  const text = $('body').text();\n\n  // Buscar tamaño en GB o MB\n  const sizeMatch = text.match(/(\\d+(?:\\.\\d+)?\\s*(?:GB|MB))/i);\n  if (sizeMatch) {\n    return sizeMatch[1];\n  }\n  return '';\n}\nfunction extractVersion($) {\n  const text = $('body').text();\n\n  // Buscar versión\n  const versionMatch = text.match(/(?:version|versión|v\\.?)\\s*(\\d+\\.\\d+(?:\\.\\d+)*)/i);\n  if (versionMatch) {\n    return versionMatch[1];\n  }\n  return '';\n}\n\n// PUT actualiza un juego (existente)\nrouter.put('/:id', async (req, res) => {\n  const updated = await Game.findByIdAndUpdate(req.params.id, req.body, {\n    new: true\n  });\n  res.json(updated);\n});\n\n// DELETE borra un juego (existente)\nrouter.delete('/:id', async (req, res) => {\n  await Game.findByIdAndDelete(req.params.id);\n  res.json({\n    message: 'Juego eliminado'\n  });\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","Game","cheerio","axios","get","req","res","games","find","json","game","findById","params","id","post","newGame","body","saved","save","url","status","success","error","response","headers","timeout","$","load","data","extractedData","nombre","extractTitle","imagenUrl","extractImage","info","extractDescription","fechaEstreno","extractDate","requisitos","extractRequirements","plataforma","extractPlatform","peso","extractSize","version","extractVersion","descargaUrl","message","console","selectors","selector","element","first","length","text","trim","split","baseUrl","img","src","attr","startsWith","urlObj","URL","origin","substring","datePatterns","pattern","match","requirements","minimo","so","procesador","memoria","graficos","disco","recomendado","reqSections","each","i","section","html","isMinimo","test","isRecomendado","target","soMatch","procMatch","memMatch","grafMatch","diskMatch","toLowerCase","includes","sizeMatch","versionMatch","put","updated","findByIdAndUpdate","new","delete","findByIdAndDelete","module","exports"],"sources":["C:/Users/RicardoMelo/Documents/Ricardo Melo/Pagina de juegos/mega-juegos-pc/frontend/src/pages/Admin/Admin.js"],"sourcesContent":["const express = require('express');\r\nconst router  = express.Router();\r\nconst Game    = require('../models/Game');\r\n\r\n// *** NUEVAS DEPENDENCIAS - Agregar al inicio ***\r\nconst cheerio = require('cheerio');\r\nconst axios = require('axios');\r\n\r\n// GET todos los juegos (existente)\r\nrouter.get('/', async (req, res) => {\r\n  const games = await Game.find({});\r\n  res.json(games);\r\n});\r\n\r\n// GET juego por ID (existente)\r\nrouter.get('/:id', async (req, res) => {\r\n  const game = await Game.findById(req.params.id);\r\n  res.json(game);\r\n});\r\n\r\n// POST crea un nuevo juego (existente)\r\nrouter.post('/', async (req, res) => {\r\n  const newGame = new Game(req.body);\r\n  const saved = await newGame.save();\r\n  res.json(saved);\r\n});\r\n\r\n// *** NUEVA RUTA - Agregar aquí ***\r\nrouter.post('/extract-from-url', async (req, res) => {\r\n  try {\r\n    const { url } = req.body;\r\n    \r\n    if (!url) {\r\n      return res.status(400).json({ \r\n        success: false, \r\n        error: 'URL es requerida' \r\n      });\r\n    }\r\n    \r\n    // Hacer petición a la URL con headers para evitar bloqueos\r\n    const response = await axios.get(url, {\r\n      headers: {\r\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\r\n      },\r\n      timeout: 10000 // 10 segundos timeout\r\n    });\r\n    \r\n    const $ = cheerio.load(response.data);\r\n    \r\n    // Extraer información básica\r\n    const extractedData = {\r\n      nombre: extractTitle($),\r\n      imagenUrl: extractImage($, url),\r\n      info: extractDescription($),\r\n      fechaEstreno: extractDate($),\r\n      requisitos: extractRequirements($),\r\n      plataforma: extractPlatform($),\r\n      peso: extractSize($),\r\n      version: extractVersion($),\r\n      descargaUrl: '' // Este campo generalmente no se puede extraer automáticamente\r\n    };\r\n    \r\n    res.json({ \r\n      success: true, \r\n      data: extractedData,\r\n      message: 'Datos extraídos exitosamente'\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Error extracting data:', error.message);\r\n    res.status(500).json({ \r\n      success: false, \r\n      error: `Error al extraer datos: ${error.message}` \r\n    });\r\n  }\r\n});\r\n\r\n// *** FUNCIONES AUXILIARES - Agregar al final del archivo ***\r\n\r\nfunction extractTitle($) {\r\n  // Intentar diferentes selectores para el título\r\n  const selectors = [\r\n    'h1',\r\n    '.game-title',\r\n    '.title',\r\n    'title',\r\n    '.product-title',\r\n    '.entry-title'\r\n  ];\r\n  \r\n  for (const selector of selectors) {\r\n    const element = $(selector).first();\r\n    if (element.length && element.text().trim()) {\r\n      return element.text().trim().split('|')[0].trim();\r\n    }\r\n  }\r\n  \r\n  return '';\r\n}\r\n\r\nfunction extractImage($, baseUrl) {\r\n  // Intentar diferentes selectores para imágenes\r\n  const selectors = [\r\n    '.game-image img',\r\n    '.product-image img',\r\n    '.cover-image',\r\n    '.screenshot img',\r\n    '.main-image img',\r\n    'img[alt*=\"cover\"]',\r\n    'img[alt*=\"screenshot\"]',\r\n    '.hero-image img'\r\n  ];\r\n  \r\n  for (const selector of selectors) {\r\n    const img = $(selector).first();\r\n    if (img.length) {\r\n      let src = img.attr('src') || img.attr('data-src');\r\n      if (src) {\r\n        // Convertir URL relativa a absoluta\r\n        if (src.startsWith('/')) {\r\n          const urlObj = new URL(baseUrl);\r\n          src = urlObj.origin + src;\r\n        } else if (!src.startsWith('http')) {\r\n          src = baseUrl + '/' + src;\r\n        }\r\n        return src;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return '';\r\n}\r\n\r\nfunction extractDescription($) {\r\n  // Intentar diferentes selectores para la descripción\r\n  const selectors = [\r\n    'meta[name=\"description\"]',\r\n    '.game-description',\r\n    '.description',\r\n    '.summary',\r\n    '.product-description',\r\n    '.content p',\r\n    '.overview'\r\n  ];\r\n  \r\n  for (const selector of selectors) {\r\n    let text = '';\r\n    if (selector.startsWith('meta')) {\r\n      text = $(selector).attr('content');\r\n    } else {\r\n      text = $(selector).first().text().trim();\r\n    }\r\n    \r\n    if (text && text.length > 50) {\r\n      return text.substring(0, 500) + (text.length > 500 ? '...' : '');\r\n    }\r\n  }\r\n  \r\n  return '';\r\n}\r\n\r\nfunction extractDate($) {\r\n  const text = $('body').text();\r\n  \r\n  // Buscar fechas en diferentes formatos\r\n  const datePatterns = [\r\n    /(\\d{4}-\\d{2}-\\d{2})/,\r\n    /(\\d{2}\\/\\d{2}\\/\\d{4})/,\r\n    /(\\d{1,2}\\s+(?:enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)\\s+\\d{4})/i,\r\n    /(\\d{1,2}\\s+(?:jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\s+\\d{4})/i\r\n  ];\r\n  \r\n  for (const pattern of datePatterns) {\r\n    const match = text.match(pattern);\r\n    if (match) {\r\n      return match[1];\r\n    }\r\n  }\r\n  \r\n  return '';\r\n}\r\n\r\nfunction extractRequirements($) {\r\n  const requirements = {\r\n    minimo: { so: '', procesador: '', memoria: '', graficos: '', disco: '' },\r\n    recomendado: { so: '', procesador: '', memoria: '', graficos: '', disco: '' }\r\n  };\r\n  \r\n  // Buscar secciones de requisitos\r\n  const reqSections = $('.requirements, .system-requirements, .specs, [class*=\"requirement\"]');\r\n  \r\n  reqSections.each((i, section) => {\r\n    const text = $(section).text();\r\n    const html = $(section).html();\r\n    \r\n    // Determinar si es mínimo o recomendado\r\n    const isMinimo = /mínimo|minimum|min\\./i.test(text);\r\n    const isRecomendado = /recomendado|recommended|rec\\./i.test(text);\r\n    \r\n    if (isMinimo || isRecomendado || reqSections.length === 1) {\r\n      const target = isMinimo ? requirements.minimo : requirements.recomendado;\r\n      \r\n      // Extraer SO\r\n      const soMatch = text.match(/(Windows\\s+\\d+[^,\\n]*|macOS[^,\\n]*|Linux[^,\\n]*)/i);\r\n      if (soMatch) target.so = soMatch[1].trim();\r\n      \r\n      // Extraer procesador\r\n      const procMatch = text.match(/(Intel[^,\\n]*|AMD[^,\\n]*|Processor[^,\\n]*)/i);\r\n      if (procMatch) target.procesador = procMatch[1].trim();\r\n      \r\n      // Extraer memoria RAM\r\n      const memMatch = text.match(/(\\d+\\s*GB\\s*(?:RAM|de RAM|Memory))/i);\r\n      if (memMatch) target.memoria = memMatch[1].trim();\r\n      \r\n      // Extraer gráficos\r\n      const grafMatch = text.match(/(DirectX[^,\\n]*|NVIDIA[^,\\n]*|AMD Radeon[^,\\n]*|Intel Graphics[^,\\n]*)/i);\r\n      if (grafMatch) target.graficos = grafMatch[1].trim();\r\n      \r\n      // Extraer espacio en disco\r\n      const diskMatch = text.match(/(\\d+\\s*GB\\s*(?:available space|de espacio|disk space|storage))/i);\r\n      if (diskMatch) target.disco = diskMatch[1].trim();\r\n    }\r\n  });\r\n  \r\n  return requirements;\r\n}\r\n\r\nfunction extractPlatform($) {\r\n  const text = $('body').text().toLowerCase();\r\n  \r\n  if (text.includes('windows') || text.includes('pc')) return 'PC';\r\n  if (text.includes('mac') || text.includes('macos')) return 'Mac';\r\n  if (text.includes('linux')) return 'Linux';\r\n  if (text.includes('steam') || text.includes('epic')) return 'PC';\r\n  \r\n  return 'PC';\r\n}\r\n\r\nfunction extractSize($) {\r\n  const text = $('body').text();\r\n  \r\n  // Buscar tamaño en GB o MB\r\n  const sizeMatch = text.match(/(\\d+(?:\\.\\d+)?\\s*(?:GB|MB))/i);\r\n  if (sizeMatch) {\r\n    return sizeMatch[1];\r\n  }\r\n  \r\n  return '';\r\n}\r\n\r\nfunction extractVersion($) {\r\n  const text = $('body').text();\r\n  \r\n  // Buscar versión\r\n  const versionMatch = text.match(/(?:version|versión|v\\.?)\\s*(\\d+\\.\\d+(?:\\.\\d+)*)/i);\r\n  if (versionMatch) {\r\n    return versionMatch[1];\r\n  }\r\n  \r\n  return '';\r\n}\r\n\r\n// PUT actualiza un juego (existente)\r\nrouter.put('/:id', async (req, res) => {\r\n  const updated = await Game.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n  res.json(updated);\r\n});\r\n\r\n// DELETE borra un juego (existente)\r\nrouter.delete('/:id', async (req, res) => {\r\n  await Game.findByIdAndDelete(req.params.id);\r\n  res.json({ message: 'Juego eliminado' });\r\n});\r\n\r\nmodule.exports = router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}