{"ast":null,"code":"import * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nimport * as Extract from './api/extract.js';\n/**\n * The cheerio class is the central class of the library. It wraps a set of\n * elements and provides an API for traversing, modifying, and interacting with\n * the set.\n *\n * Loading a document will return the Cheerio class bound to the root element of\n * the document. The class will be instantiated when querying the document (when\n * calling `$('selector')`).\n *\n * @example This is the HTML markup we will be using in all of the API examples:\n *\n * ```html\n * <ul id=\"fruits\">\n *   <li class=\"apple\">Apple</li>\n *   <li class=\"orange\">Orange</li>\n *   <li class=\"pear\">Pear</li>\n * </ul>\n * ```\n */\nexport class Cheerio {\n  /**\n   * Instance of cheerio. Methods are specified in the modules. Usage of this\n   * constructor is not recommended. Please use `$.load` instead.\n   *\n   * @private\n   * @param elements - The new selection.\n   * @param root - Sets the root node.\n   * @param options - Options for the instance.\n   */\n  constructor(elements, root, options) {\n    this.length = 0;\n    this.options = options;\n    this._root = root;\n    if (elements) {\n      for (let idx = 0; idx < elements.length; idx++) {\n        this[idx] = elements[idx];\n      }\n      this.length = elements.length;\n    }\n  }\n}\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms, Extract);","map":{"version":3,"names":["Attributes","Traversing","Manipulation","Css","Forms","Extract","Cheerio","constructor","elements","root","options","length","_root","idx","prototype","cheerio","splice","Array","Symbol","iterator","Object","assign"],"sources":["../../src/cheerio.ts"],"sourcesContent":[null],"mappings":"AAKA,OAAO,KAAKA,UAAU,MAAM,qBAAqB;AACjD,OAAO,KAAKC,UAAU,MAAM,qBAAqB;AACjD,OAAO,KAAKC,YAAY,MAAM,uBAAuB;AACrD,OAAO,KAAKC,GAAG,MAAM,cAAc;AACnC,OAAO,KAAKC,KAAK,MAAM,gBAAgB;AACvC,OAAO,KAAKC,OAAO,MAAM,kBAAkB;AAS3C;;;;;;;;;;;;;;;;;;;AAmBA,OAAM,MAAgBC,OAAO;EAa3B;;;;;;;;;EASAC,YACEC,QAAkC,EAClCC,IAA8B,EAC9BC,OAAwB;IAxB1B,KAAAC,MAAM,GAAG,CAAC;IA0BR,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,KAAK,GAAGH,IAAI;IAEjB,IAAID,QAAQ,EAAE;MACZ,KAAK,IAAIK,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGL,QAAQ,CAACG,MAAM,EAAEE,GAAG,EAAE,EAAE;QAC9C,IAAI,CAACA,GAAG,CAAC,GAAGL,QAAQ,CAACK,GAAG,CAAC;MAC3B;MACA,IAAI,CAACF,MAAM,GAAGH,QAAQ,CAACG,MAAM;IAC/B;EACF;;AAgDF;AACAL,OAAO,CAACQ,SAAS,CAACC,OAAO,GAAG,kBAAkB;AAE9C;;;AAGAT,OAAO,CAACQ,SAAS,CAACE,MAAM,GAAGC,KAAK,CAACH,SAAS,CAACE,MAAM;AAEjD;AACAV,OAAO,CAACQ,SAAS,CAACI,MAAM,CAACC,QAAQ,CAAC,GAAGF,KAAK,CAACH,SAAS,CAACI,MAAM,CAACC,QAAQ,CAAC;AAErE;AACAC,MAAM,CAACC,MAAM,CACXf,OAAO,CAACQ,SAAS,EACjBd,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,GAAG,EACHC,KAAK,EACLC,OAAO,CACR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}