{"ast":null,"code":"/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nimport { isTag, Text, hasChildren, cloneNode, Document } from 'domhandler';\nimport { update as updateDOM } from '../parse.js';\nimport { text as staticText } from '../static.js';\nimport { domEach, isHtml, isCheerio } from '../utils.js';\nimport { removeElement } from 'domutils';\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if\n * necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nexport function _makeDomArray(elem, clone) {\n  if (elem == null) {\n    return [];\n  }\n  if (typeof elem === 'string') {\n    return this._parse(elem, this.options, false, null).children.slice(0);\n  }\n  if ('length' in elem) {\n    if (elem.length === 1) {\n      return this._makeDomArray(elem[0], clone);\n    }\n    const result = [];\n    for (let i = 0; i < elem.length; i++) {\n      const el = elem[i];\n      if (typeof el === 'object') {\n        if (el == null) {\n          continue;\n        }\n        if (!('length' in el)) {\n          result.push(clone ? cloneNode(el, true) : el);\n          continue;\n        }\n      }\n      result.push(...this._makeDomArray(el, clone));\n    }\n    return result;\n  }\n  return [clone ? cloneNode(elem, true) : elem];\n}\nfunction _insert(concatenator) {\n  return function (...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n      if (!hasChildren(el)) return;\n      const domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, this._render(el.children)) : elems;\n      const dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n  var _a, _b;\n  const spliceArgs = [spliceIdx, spliceCount, ...newElems];\n  const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n  const next = spliceIdx + spliceCount >= array.length ? null : array[spliceIdx + spliceCount];\n  /*\n   * Before splicing in new elements, ensure they do not already appear in the\n   * current array.\n   */\n  for (let idx = 0; idx < newElems.length; ++idx) {\n    const node = newElems[idx];\n    const oldParent = node.parent;\n    if (oldParent) {\n      const oldSiblings = oldParent.children;\n      const prevIdx = oldSiblings.indexOf(node);\n      if (prevIdx > -1) {\n        oldParent.children.splice(prevIdx, 1);\n        if (parent === oldParent && spliceIdx > prevIdx) {\n          spliceArgs[0]--;\n        }\n      }\n    }\n    node.parent = parent;\n    if (node.prev) {\n      node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n    }\n    if (node.next) {\n      node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n    }\n    node.prev = idx === 0 ? prev : newElems[idx - 1];\n    node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n  }\n  if (prev) {\n    prev.next = newElems[0];\n  }\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n  return array.splice(...spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nexport function appendTo(target) {\n  const appendTarget = isCheerio(target) ? target : this._make(target);\n  appendTarget.append(this);\n  return this;\n}\n/**\n * Insert every element in the set of matched elements to the beginning of the\n * target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nexport function prependTo(target) {\n  const prependTarget = isCheerio(target) ? target : this._make(target);\n  prependTarget.prepend(this);\n  return this;\n}\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexport const append = _insert((dom, children, parent) => {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexport const prepend = _insert((dom, children, parent) => {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n  return function (wrapper) {\n    const lastIdx = this.length - 1;\n    const lastParent = this.parents().last();\n    for (let i = 0; i < this.length; i++) {\n      const el = this[i];\n      const wrap = typeof wrapper === 'function' ? wrapper.call(el, i, el) : typeof wrapper === 'string' && !isHtml(wrapper) ? lastParent.find(wrapper).clone() : wrapper;\n      const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n      if (!wrapperDom || !hasChildren(wrapperDom)) continue;\n      let elInsertLocation = wrapperDom;\n      /*\n       * Find the deepest child. Only consider the first tag child of each node\n       * (ignore text); stop if no children are found.\n       */\n      let j = 0;\n      while (j < elInsertLocation.children.length) {\n        const child = elInsertLocation.children[j];\n        if (isTag(child)) {\n          elInsertLocation = child;\n          j = 0;\n        } else {\n          j++;\n        }\n      }\n      insert(el, elInsertLocation, [wrapperDom]);\n    }\n    return this;\n  };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the\n *   selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexport const wrap = _wrap((el, elInsertLocation, wrapperDom) => {\n  const {\n    parent\n  } = el;\n  if (!parent) return;\n  const siblings = parent.children;\n  const index = siblings.indexOf(el);\n  updateDOM([el], elInsertLocation);\n  /*\n   * The previous operation removed the current element from the `siblings`\n   * array, so the `dom` array can be inserted without removing any\n   * additional elements.\n   */\n  uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexport const wrapInner = _wrap((el, elInsertLocation, wrapperDom) => {\n  if (!hasChildren(el)) return;\n  updateDOM(el.children, elInsertLocation);\n  updateDOM(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>',\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>',\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be\n *   unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nexport function unwrap(selector) {\n  this.parent(selector).not('body').each((_, el) => {\n    this._make(el).replaceWith(el.children);\n  });\n  return this;\n}\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>',\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>',\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nexport function wrapAll(wrapper) {\n  const el = this[0];\n  if (el) {\n    const wrap = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n    // If html is given as wrapper, wrap may contain text elements\n    let elInsertLocation;\n    for (let i = 0; i < wrap.length; i++) {\n      if (wrap[i].type === 'tag') elInsertLocation = wrap[i];\n    }\n    let j = 0;\n    /*\n     * Find the deepest child. Only consider the first tag child of each node\n     * (ignore text); stop if no children are found.\n     */\n    while (elInsertLocation && j < elInsertLocation.children.length) {\n      const child = elInsertLocation.children[j];\n      if (child.type === 'tag') {\n        elInsertLocation = child;\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n    if (elInsertLocation) this._make(elInsertLocation).append(this);\n  }\n  return this;\n}\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nexport function after(...elems) {\n  const lastIdx = this.length - 1;\n  return domEach(this, (el, i) => {\n    if (!hasChildren(el) || !el.parent) {\n      return;\n    }\n    const siblings = el.parent.children;\n    const index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    const domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, this._render(el.children)) : elems;\n    const dom = this._makeDomArray(domSrc, i < lastIdx);\n    // Add element after `this` element\n    uniqueSplice(siblings, index + 1, 0, dom, el.parent);\n  });\n}\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nexport function insertAfter(target) {\n  if (typeof target === 'string') {\n    target = this._make(target);\n  }\n  this.remove();\n  const clones = [];\n  for (const el of this._makeDomArray(target)) {\n    const clonedSelf = this.clone().toArray();\n    const {\n      parent\n    } = el;\n    if (!parent) {\n      continue;\n    }\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) continue;\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(...clonedSelf);\n  }\n  return this._make(clones);\n}\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nexport function before(...elems) {\n  const lastIdx = this.length - 1;\n  return domEach(this, (el, i) => {\n    if (!hasChildren(el) || !el.parent) {\n      return;\n    }\n    const siblings = el.parent.children;\n    const index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    const domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, this._render(el.children)) : elems;\n    const dom = this._makeDomArray(domSrc, i < lastIdx);\n    // Add element before `el` element\n    uniqueSplice(siblings, index, 0, dom, el.parent);\n  });\n}\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nexport function insertBefore(target) {\n  const targetArr = this._make(target);\n  this.remove();\n  const clones = [];\n  domEach(targetArr, el => {\n    const clonedSelf = this.clone().toArray();\n    const {\n      parent\n    } = el;\n    if (!parent) {\n      return;\n    }\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(...clonedSelf);\n  });\n  return this._make(clones);\n}\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nexport function remove(selector) {\n  // Filter if we have selector\n  const elems = selector ? this.filter(selector) : this;\n  domEach(elems, el => {\n    removeElement(el);\n    el.prev = el.next = el.parent = null;\n  });\n  return this;\n}\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nexport function replaceWith(content) {\n  return domEach(this, (el, i) => {\n    const {\n      parent\n    } = el;\n    if (!parent) {\n      return;\n    }\n    const siblings = parent.children;\n    const cont = typeof content === 'function' ? content.call(el, i, el) : content;\n    const dom = this._makeDomArray(cont);\n    /*\n     * In the case that `dom` contains nodes that already exist in other\n     * structures, ensure those nodes are properly removed.\n     */\n    updateDOM(dom, null);\n    const index = siblings.indexOf(el);\n    // Completely remove old element\n    uniqueSplice(siblings, index, 1, dom, parent);\n    if (!dom.includes(el)) {\n      el.parent = el.prev = el.next = null;\n    }\n  });\n}\n/**\n * Removes all children from each item in the selection. Text nodes and comment\n * nodes are left as is.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nexport function empty() {\n  return domEach(this, el => {\n    if (!hasChildren(el)) return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n    el.children.length = 0;\n  });\n}\nexport function html(str) {\n  if (str === undefined) {\n    const el = this[0];\n    if (!el || !hasChildren(el)) return null;\n    return this._render(el.children);\n  }\n  return domEach(this, el => {\n    if (!hasChildren(el)) return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n    const content = isCheerio(str) ? str.toArray() : this._parse(`${str}`, this.options, false, el).children;\n    updateDOM(content, el);\n  });\n}\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nexport function toString() {\n  return this._render(this);\n}\nexport function text(str) {\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return staticText(this);\n  }\n  if (typeof str === 'function') {\n    // Function support\n    return domEach(this, (el, i) => this._make(el).text(str.call(el, i, staticText([el]))));\n  }\n  // Append text node to each selected elements\n  return domEach(this, el => {\n    if (!hasChildren(el)) return;\n    for (const child of el.children) {\n      child.next = child.prev = child.parent = null;\n    }\n    const textNode = new Text(`${str}`);\n    updateDOM(textNode, el);\n  });\n}\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nexport function clone() {\n  const clone = Array.prototype.map.call(this.get(), el => cloneNode(el, true));\n  // Add a root node around the cloned nodes\n  const root = new Document(clone);\n  for (const node of clone) {\n    node.parent = root;\n  }\n  return this._make(clone);\n}","map":{"version":3,"names":["isTag","Text","hasChildren","cloneNode","Document","update","updateDOM","text","staticText","domEach","isHtml","isCheerio","removeElement","_makeDomArray","elem","clone","_parse","options","children","slice","length","result","i","el","push","_insert","concatenator","elems","lastIdx","domSrc","call","_render","dom","uniqueSplice","array","spliceIdx","spliceCount","newElems","parent","spliceArgs","prev","next","idx","node","oldParent","oldSiblings","prevIdx","indexOf","splice","_a","_b","appendTo","target","appendTarget","_make","append","prependTo","prependTarget","prepend","_wrap","insert","wrapper","lastParent","parents","last","wrap","find","wrapperDom","elInsertLocation","j","child","siblings","index","wrapInner","unwrap","selector","not","each","_","replaceWith","wrapAll","insertBefore","type","after","insertAfter","remove","clones","clonedSelf","toArray","before","targetArr","filter","content","cont","includes","empty","html","str","undefined","toString","textNode","Array","prototype","map","get","root"],"sources":["../../../src/api/manipulation.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}